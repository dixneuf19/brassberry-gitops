kube-prometheus-stack:
  alertmanager:
    enabled: false

  grafana:
    enabled: true
    admin:
      existingSecret: grafana-admin

    defaultDashboardsTimezone: Europe/Paris    
    plugins:
      - grafana-piechart-panel

    # Configure dashboard providers.
    # ref: http://docs.grafana.org/administration/provisioning/#dashboards
    # `path` must be /var/lib/grafana/dashboards/<provider_name>
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: nginx
            orgId: 1
            type: file
            folder: NGINX
            disableDeletion: false
            editable: false
            allowUiUpdates: false
            options:
              path: /var/lib/grafana/dashboards/nginx
          - name: vpa
            orgId: 1
            type: file
            folder: VerticalPodAutoscaler
            disableDeletion: false
            editable: false
            allowUiUpdates: false
            options:
              path: /var/lib/grafana/dashboards/vpa
          - name: loki
            orgId: 1
            type: file
            folder: Loki
            disableDeletion: false
            editable: false
            allowUiUpdates: false
            options:
              path: /var/lib/grafana/dashboards/loki
          - name: default
            orgId: 1
            type: file
            disableDeletion: false
            editable: false
            allowUiUpdates: false
            options:
              path: /var/lib/grafana/dashboards/default

    # Organise dashboards by provider, with the provider's name as the key.
    dashboards:
      nginx: # The "nginx" provider is defined above.
        nginx-ingress-controller:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.4.0/deploy/grafana/dashboards/nginx.json
        ingress-request-performance:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.4.0/deploy/grafana/dashboards/request-handling-performance.json
      vpa:
        vpa-recommendations:
          gnetId: 14588 # https://grafana.com/grafana/dashboards/14588-vpa-recommendations
          revision: 2
          datasource: Prometheus
      default:
        node-exporter-full:
          gnetId: 1860 # https://grafana.com/grafana/dashboards/1860-node-exporter-full
          revision: 27
          datasource: Prometheus
      loki:
        loki-chunks:
          url: https://raw.githubusercontent.com/grafana/loki/main/production/helm/loki/src/dashboards/loki-chunks.json
        loki-deletion:
          url: https://raw.githubusercontent.com/grafana/loki/main/production/helm/loki/src/dashboards/loki-deletion.json
        loki-logs:
          url: https://raw.githubusercontent.com/grafana/loki/main/production/helm/loki/src/dashboards/loki-logs.json
        loki-mixin-recording-rules:
          url: https://raw.githubusercontent.com/grafana/loki/main/production/helm/loki/src/dashboards/loki-mixin-recording-rules.json
        loki-operational:
          url: https://raw.githubusercontent.com/grafana/loki/main/production/helm/loki/src/dashboards/loki-operational.json
        loki-read-resources:
          url: https://raw.githubusercontent.com/grafana/loki/main/production/helm/loki/src/dashboards/loki-read-resources.json
        loki-reads:
          url: https://raw.githubusercontent.com/grafana/loki/main/production/helm/loki/src/dashboards/loki-reads.json
        loki-retention:
          url: https://raw.githubusercontent.com/grafana/loki/main/production/helm/loki/src/dashboards/loki-retention.json
        loki-write-resources:
          url: https://raw.githubusercontent.com/grafana/loki/main/production/helm/loki/src/dashboards/loki-write-resources.json
        loki-writes:
          url: https://raw.githubusercontent.com/grafana/loki/main/production/helm/loki/src/dashboards/loki-writes.json

    sidecar:
      dashboards:
        provider:
          foldersFromFilesStructure: true

    additionalDataSources:
      - name: Loki
        type: loki
        access: proxy
        url: http://loki.logging:3100

    persistence:
      enabled: true
      storageClassName: nfs-client
    
    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
        nginx.ingress.kubernetes.io/auth-type: basic
        nginx.ingress.kubernetes.io/auth-secret: ingress-nginx/basic-auth
      labels: {}
      hosts:
        - grafana.dixneuf19.me
      path: /
      tls:
        - secretName: grafana-dixneuf19-me-tls
          hosts:
          - grafana.dixneuf19.me

# These components are not exposed with the k0s setup
  kubeControllerManager:
    enabled: false
  kubeEtcd:
    enabled: false
  kubeScheduler:
    enabled: false

  kubeProxy:
    enabled: true
  kubeStateMetrics:
    enabled: true


  nodeExporter:
    enabled: true

  prometheusOperator:
    enabled: true
    resources:
      limits:
        cpu: 200m
        memory: 200Mi
      requests:
        cpu: 100m
        memory: 100Mi

  prometheus:
    enabled: true

    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
        nginx.ingress.kubernetes.io/auth-type: basic
        nginx.ingress.kubernetes.io/auth-secret: ingress-nginx/basic-auth
      labels: {}
      hosts:
        - prometheus.dixneuf19.me
      paths:
        - /
      pathType: ImplementationSpecific
      tls:
        - secretName: prometheus-dixneuf19-me-tls
          hosts:
            - prometheus.dixneuf19.me

    prometheusSpec:
      externalUrl: "https://prometheus.dixneuf19.me"

      # Watch all PrometheusRules in the cluster.
      ruleNamespaceSelector:
        matchLabels: {}
      ruleSelector:
        matchLabels: {}

      # Watch all ServiceMonitors in the cluster.
      serviceMonitorNamespaceSelector:
        matchLabels: {}
      serviceMonitorSelector:
        matchLabels: {}

      # Watch all PodMonitors in the cluster.
      podMonitorSelector:
        matchLabels: {}
      podMonitorNamespaceSelector:
        matchLabels: {}

      retention: 30d

      resources:
        requests:
          memory: 1.5Gi
          cpu: 1
        limits:
          memory: 3Gi
          cpu: 2
      storageSpec:
        volumeClaimTemplate:
          spec:
            storageClassName: nfs-client
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 1Mi


  kube-state-metrics:

    # Available collectors for kube-state-metrics.
    # By default, all available resources are enabled, comment out to disable.
    # Copied to enabler VPA collector
    collectors:
      - certificatesigningrequests
      - configmaps
      - cronjobs
      - daemonsets
      - deployments
      - endpoints
      - horizontalpodautoscalers
      - ingresses
      - jobs
      - leases
      - limitranges
      - mutatingwebhookconfigurations
      - namespaces
      - networkpolicies
      - nodes
      - persistentvolumeclaims
      - persistentvolumes
      - poddisruptionbudgets
      - pods
      - replicasets
      - replicationcontrollers
      - resourcequotas
      - secrets
      - services
      - statefulsets
      - storageclasses
      - validatingwebhookconfigurations
      - volumeattachments
      - verticalpodautoscalers # not a default resource, see also: https://github.com/kubernetes/kube-state-metrics#enabling-verticalpodautoscalers
