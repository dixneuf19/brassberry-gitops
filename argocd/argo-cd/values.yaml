argo-cd:  
  installCRDs: false
  global:
    image:
      repository: alinbalutoiu/argocd

  controller:
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
        selector:
          prometheus: kube-prometheus
        namespace: monitoring
        additionalLabels: {}
    resources:
      limits:
        cpu: 1000m
        memory: 2Gi
      requests:
        cpu: 500m
        memory: "1.5Gi"
  ## Dex
  dex:
    enabled: false

  redis:
    resources:
      limits:
        cpu: 200m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 64Mi

  server:
    extraArgs:
      - --disable-auth
    #  - --insecure

    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 50m
        memory: 64Mi
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
        selector:
          prometheus: kube-prometheus
        namespace: monitoring
        additionalLabels: {}

    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
        nginx.ingress.kubernetes.io/auth-secret: nginx/basic-auth
        nginx.ingress.kubernetes.io/auth-type: basic
        # GRPC, so the CLI won't work
        nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
      labels: {}
      ingressClassName: nginx
      hosts:
        - argocd.dixneuf19.me
      paths:
        - /
      extraPaths:
        []
        # - path: /*
        #   backend:
        #     serviceName: ssl-redirect
        #     servicePort: use-annotation
      tls:
        - secretName: argocd-dixneuf19-me-tls
          hosts:
            - argocd.dixneuf19.me
      https: false
    # dedicated ingess for gRPC as documented at
    # https://argoproj.github.io/argo-cd/operator-manual/ingress/
    ingressGrpc:
      enabled: false

    config:
      # Argo CD's externally facing base URL (optional). Required when configuring SSO
      url: https://argocd.dixneuf19.me

  ## Repo Server
  repoServer:
    resources:
      limits:
        cpu: 1000m
        memory: 512Mi
      requests:
        cpu: 500m
        memory: 256Mi
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
        selector:
          prometheus: kube-prometheus
        namespace: monitoring
        additionalLabels: {}
